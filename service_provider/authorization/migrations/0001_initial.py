# Generated by Django 3.1.6 on 2022-05-12 05:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('first_name', models.CharField(default='', max_length=30)),
                ('last_name', models.CharField(default='', max_length=30)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='date of birth')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('type', models.IntegerField(choices=[(0, 'None'), (1, 'Vendor'), (2, 'Client'), (3, 'Admin')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'None'), (1, 'Inactive'), (2, 'Active'), (3, 'Pending')], default='0')),
                ('gender', models.IntegerField(choices=[(0, 'None'), (1, 'Male'), (2, 'Female'), (3, 'Not Specify')], default=0)),
                ('home_address', models.CharField(default='', max_length=1000)),
                ('street_address', models.CharField(default='', max_length=1000)),
                ('apartment', models.CharField(default='', max_length=1000)),
                ('city', models.CharField(default='', max_length=50)),
                ('state', models.CharField(default='', max_length=50)),
                ('zipcode', models.CharField(default='', max_length=50)),
                ('country', models.CharField(default='', max_length=50)),
                ('stripe_customer_id', models.CharField(default='', max_length=100)),
                ('user_bio', models.CharField(default='', max_length=500)),
                ('rating', models.IntegerField(default=0)),
                ('no_of_reviews', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('card_number', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('card_number_hashed', models.CharField(max_length=256, unique=True, verbose_name='card number')),
                ('cvv', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('expire_month', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('expire_year', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('stripe_payment_method_id', models.CharField(max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('lead_charge', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Lead charges')),
                ('urgent_service_charges', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Urgent service charges')),
                ('regular_service_charges', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular service charges')),
                ('job_cancellation_charges', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Job cancellation charges')),
                ('otp_expiry', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Otp Expiry')),
                ('vendor_per_search', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Vendor per search')),
                ('first_late_penality_charge', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='First late penality charge')),
                ('first_late_penality_timestamp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='First late penality timestamp')),
                ('second_late_penality_charge', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Second late penality charge')),
                ('second_late_penality_timestamp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Second late penality timestamp')),
                ('third_late_penality_charge', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Third late penality charge')),
                ('third_late_penality_timestamp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Third late penality timestamp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(max_length=50)),
                ('type', models.IntegerField(choices=[(1, 'CERTIFICATE'), (2, 'IMAGE'), (3, 'REVIEW'), (4, 'JOB'), (5, 'LEAD')], default=1)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('format', models.IntegerField(choices=[(1, 'PDF'), (2, 'JPG'), (3, 'PNG'), (4, 'JPEG')], default=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('otp', models.IntegerField(validators=[django.core.validators.RegexValidator('^[0-9]{4}$', 'Invalid OTP')])),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemChangelog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('action_performed', models.IntegerField(choices=[(1, 'CREATED'), (2, 'UPDATED'), (3, 'DELETED')], editable=False)),
                ('changed_in', models.IntegerField(choices=[(1, 'ACCOUNT'), (2, 'DOCUMENT'), (3, 'LOCATION'), (4, 'OTP'), (5, 'UserUnavailability'), (6, 'USER'), (7, 'JOB'), (8, 'LEAD'), (9, 'SERVICECATEGORY'), (10, 'SERVICE'), (11, 'REVIEW'), (12, 'TRANSACTION'), (13, 'USER_DEVICE'), (14, 'CONFIGURATION'), (15, 'RATING')], editable=False)),
                ('changed_reference_id', models.IntegerField(editable=False)),
                ('description', models.CharField(editable=False, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserUnavailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('offline', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('identifier', models.TextField(max_length=200)),
                ('model', models.TextField(blank=True, max_length=200, null=True)),
                ('os', models.TextField(blank=True, max_length=200, null=True)),
                ('manufacture', models.TextField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_user', to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
